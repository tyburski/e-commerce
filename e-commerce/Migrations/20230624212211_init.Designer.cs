// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_commerce;

#nullable disable

namespace e_commerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230624212211_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("e_commerce.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("parametersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("parametersId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("e_commerce.Models.Items.Parameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parameters");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Parameters");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("e_commerce.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("e_commerce.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("e_commerce.Models.Items.DoorGasketParameters", b =>
                {
                    b.HasBaseType("e_commerce.Models.Items.Parameters");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DoorGasketParameters");
                });

            modelBuilder.Entity("e_commerce.Models.Items.FoilParameters", b =>
                {
                    b.HasBaseType("e_commerce.Models.Items.Parameters");

                    b.Property<int>("Permeability")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("FoilParameters");
                });

            modelBuilder.Entity("e_commerce.Models.Items.HandleParameters", b =>
                {
                    b.HasBaseType("e_commerce.Models.Items.Parameters");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("HandleParameters");
                });

            modelBuilder.Entity("e_commerce.Models.Items.WindowParameters", b =>
                {
                    b.HasBaseType("e_commerce.Models.Items.Parameters");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Parameters", t =>
                        {
                            t.Property("Width")
                                .HasColumnName("WindowParameters_Width");
                        });

                    b.HasDiscriminator().HasValue("WindowParameters");
                });

            modelBuilder.Entity("e_commerce.Models.Item", b =>
                {
                    b.HasOne("e_commerce.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("e_commerce.Models.Items.Parameters", "parameters")
                        .WithMany()
                        .HasForeignKey("parametersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("parameters");
                });

            modelBuilder.Entity("e_commerce.Models.Order", b =>
                {
                    b.HasOne("e_commerce.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("e_commerce.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("e_commerce.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
